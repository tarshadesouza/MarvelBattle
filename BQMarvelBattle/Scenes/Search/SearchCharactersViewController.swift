//
//  SearchCharactersViewController.swift
//  BQMarvelBattle
//
//  Created by Tarsha de Souza on 9/5/20.
//  Copyright (c) 2020 Tarsha de Souza. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SearchCharactersDisplayLogic: class {
    func displaySomething(viewModel: SearchCharacters.Model.ViewModel)
}

class SearchCharactersViewController: UIViewController, SearchCharactersDisplayLogic {
    
    @IBOutlet weak var titleLbl: UILabel! {
        didSet {
            titleLbl.text = "THIS IS SEARCH CHAR VC"
        }
    }
    
    var interactor: SearchCharactersBusinessLogic?
    var router: (NSObjectProtocol & SearchCharactersRoutingLogic & SearchCharactersDataPassing)?
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    private func setup() {
        let viewController = self
        let interactor = SearchCharactersInteractor()
        let presenter = SearchCharactersPresenter()
        let router = SearchCharactersRouter()
        
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        //    searchForCharacters()
    }
    
    func displaySomething(viewModel: SearchCharacters.Model.ViewModel) {
        //nameTextField.text = viewModel.name
    }
    
}

extension SearchCharactersViewController {
    //Interaction
    func searchForCharacters(with name: String) {
        let request = SearchCharacters.Model.Request(characterName: name)
        interactor?.searchCharacterNames(request: request)
    }
}
