//
//  RankingsViewController.swift
//  BQMarvelBattle
//
//  Created by Tarsha de Souza on 9/5/20.
//  Copyright (c) 2020 Tarsha de Souza. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol RankingsDisplayLogic: class {
    func showRankings(viewModel: Rankings.Model.ViewModel)
    func showError(with error: AppError)
}

class RankingsViewController: UIViewController, RankingsDisplayLogic {
    
    @IBOutlet weak var tableView: UITableView!
    
    var interactor: RankingsBusinessLogic?
    var router: (NSObjectProtocol & RankingsRoutingLogic & RankingsDataPassing)?
    var battleSummary: [Character]?
    var tableDatasource: RankingsDataSource?
    var tableDelegate: RankingsTableviewDelegate?
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    private func setup() {
        let viewController = self
        let interactor = RankingsInteractor()
        let presenter = RankingsPresenter()
        let router = RankingsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    override func viewDidLoad() {
        super.viewDidLoad()
        interactor?.retrieveRankings()
        setupTableView()
    }
    
    override func viewDidAppear(_ animated: Bool) {
        interactor?.retrieveRankings()
        tableView.reloadData()
    }
    
    func setupTableView() {
        tableDelegate = RankingsTableviewDelegate(self)
        tableDatasource = RankingsDataSource(items: battleSummary, tableView: self.tableView, delegate: tableDelegate!)
        tableView?.allowsSelection = true
    }
    
    func showRankings(viewModel: Rankings.Model.ViewModel) {
        battleSummary = viewModel.rankings
        battleSummary = sortBattlesArray()
    }
    
    func showError(with error: AppError) {
        self.presentAlert(withTitle: error.title, message: error.description)
    }
    
    func sortBattlesArray() -> [Character]?{
        let sortedArray = battleSummary?.sorted { (fighterA, fighterB) -> Bool in
            guard let fighterA = fighterA.comics?.available, let fighterB = fighterB.comics?.available else {
                return false
            }
            return fighterA > fighterB
        }
        return sortedArray
    }
}
